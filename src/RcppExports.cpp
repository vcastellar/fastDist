// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fastPdist2
NumericMatrix fastPdist2(NumericMatrix Ar, NumericMatrix Br);
RcppExport SEXP _fastDist_fastPdist2(SEXP ArSEXP, SEXP BrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Ar(ArSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Br(BrSEXP);
    rcpp_result_gen = Rcpp::wrap(fastPdist2(Ar, Br));
    return rcpp_result_gen;
END_RCPP
}
// fastPdist1
NumericMatrix fastPdist1(NumericMatrix Ar, NumericMatrix Br);
RcppExport SEXP _fastDist_fastPdist1(SEXP ArSEXP, SEXP BrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type Ar(ArSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Br(BrSEXP);
    rcpp_result_gen = Rcpp::wrap(fastPdist1(Ar, Br));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fastDist_fastPdist2", (DL_FUNC) &_fastDist_fastPdist2, 2},
    {"_fastDist_fastPdist1", (DL_FUNC) &_fastDist_fastPdist1, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_fastDist(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
